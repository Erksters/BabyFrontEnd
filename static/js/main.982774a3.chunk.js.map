{"version":3,"sources":["components/Header/Header.js","components/Log/log.js","components/Loading/loading.js","components/Show_total_count_by_name.js","components/Navigator.js","components/Show_total_count_by_name_and_year.js","api/api.js","App.js","reportWebVitals.js","index.js"],"names":["MyHeader","to","style","textDecoration","className","Log","props","arrayOfSearches","classes","makeStyles","table","maxWidth","useStyles","console","log","TableContainer","component","Paper","justifyContent","display","Table","TableHead","TableRow","TableCell","align","TableBody","map","row","scope","toLocaleString","name","Loading","username","color","size","speed","ShowTotalCountByName","useState","data","setData","SubmittedData","setSubmittedData","setUsername","searches","setSearches","doneLoading","setDoneLoading","loadData","a","bodyFormData","FormData","append","fetch","get_total_count_by_name","method","body","then","res","json","type","value","onChange","e","target","Button","onClick","length","Navigator","Navbar","bg","variant","Container","Brand","href","Nav","Link","NavDropdown","title","id","Item","ShowTotalCountByNameAndYear","year","setYear","base_url","max","min","App","basename","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.982774a3.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst MyHeader = () => {\n  return (\n    <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n      <div className=\"d-none d-lg-block\">\n        <div className=\"header\">\n          <h1>Baby Name Stats</h1>\n        </div>\n      </div>\n\n      <div className=\"d-lg-none\">\n        <div className=\"headerMobile\">\n          <h1>Baby Name Stats</h1>\n        </div>\n      </div>\n    </Link>\n  );\n};\n\nexport default MyHeader;\n","import React from \"react\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst Log = props => {\r\n    const { arrayOfSearches } = props;\r\n\r\n    const useStyles = makeStyles({\r\n        table: {\r\n            maxWidth: 650,\r\n        },\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    console.log(typeof (arrayOfSearches[0][1]))\r\n    return (\r\n        <>\r\n            <div className=\"d-none d-lg-block\">\r\n\r\n\r\n                <TableContainer component={Paper} style={{ justifyContent: 'center', display: 'flex' }}>\r\n                    <Table className={classes.table} aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Name</TableCell>\r\n\r\n                                <TableCell align=\"right\">Total</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {arrayOfSearches.map(row => (\r\n                                <TableRow key={row.name}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {row[0]}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">{row[1].toLocaleString(\"en-US\")}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n\r\n\r\n            </div>\r\n\r\n            <div className=\"d-lg-none\">\r\n                adsf\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Log;\r\n","import React from \"react\";\r\nimport { WaveLoading } from \"react-loadingg\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst Loading = (props) => {\r\n    const { username } = props\r\n\r\n    return (\r\n        <>\r\n            <div className=\"m-3\" style={{ justifyContent: 'center', display: 'flex' }}>\r\n                Counting up all the {username}'s\r\n            </div>\r\n            <div className=\"centerDiv\">\r\n                <WaveLoading color=\"#147ffa\" size=\"large\" speed=\".9\" />\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Loading;\r\n","\r\nimport { Button } from \"react-bootstrap\";\r\nimport React, { useState } from \"react\";\r\nimport { get_total_count_by_name } from \"../api/api\"\r\nimport Log from \"./Log/log\";\r\nimport Loading from \"./Loading/loading\";\r\n\r\nconst ShowTotalCountByName = () => {\r\n    const myurl = get_total_count_by_name;\r\n\r\n    const [data, setData] = useState([]);\r\n    const [SubmittedData, setSubmittedData] = useState(false);\r\n    const [username, setUsername] = useState('')\r\n    const dialogue1 = `Type in a name to search for.`\r\n    const dialogue2 = `The result returned will be the number of children born from 1880 to 2018 with that name`\r\n\r\n    const [searches, setSearches] = useState([]);\r\n    const [doneLoading, setDoneLoading] = useState(false);\r\n\r\n    const loadData = async () => {\r\n\r\n        var bodyFormData = new FormData();\r\n        bodyFormData.append('username', username);\r\n\r\n        await fetch(myurl, {\r\n            method: \"POST\",\r\n            body: bodyFormData\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setData(data);\r\n                setSearches([...searches, [username, data[0][\"total\"]]])\r\n                setDoneLoading(true)\r\n            }\r\n            );\r\n    };\r\n\r\n    if (!SubmittedData) {\r\n        return (\r\n            <>\r\n                <div style={{ justifyContent: 'center', display: 'flex' }}>\r\n                    <p>{dialogue1}</p>\r\n                </div>\r\n                <div style={{ justifyContent: 'center', display: 'flex' }}>\r\n                    <p>{dialogue2}</p>\r\n                </div>\r\n\r\n                <div style={{ justifyContent: 'center', display: 'flex' }}>\r\n                    <input\r\n                        className=\"m-2\"\r\n                        type=\"text\"\r\n                        value={username}\r\n                        onChange={e => setUsername(e.target.value)}\r\n                    />\r\n                </div >\r\n\r\n                <div style={{ justifyContent: 'center', display: 'flex' }}>\r\n                    <Button\r\n                        className=\"m-2\"\r\n                        onClick={() => {\r\n                            setSubmittedData(true);\r\n                            loadData();\r\n                        }}>\r\n                        Start counting!\r\n                    </Button>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    const Reset = () => {\r\n        setSubmittedData(!SubmittedData);\r\n        setDoneLoading(false);\r\n    }\r\n\r\n    if (!data.length || !doneLoading) {\r\n        return (\r\n            <div>\r\n                <Loading username={username} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"m-3 \" style={{ justifyContent: 'center', display: 'flex' }}>\r\n                There were a total of\r\n            </div>\r\n\r\n            <div className=\"m-3\" style={{ justifyContent: 'center', display: 'flex' }}>\r\n                <strong> {data[0][\"total\"].toLocaleString(\"en-US\")} </strong>\r\n            </div>\r\n\r\n            <div className=\"m-3\" style={{ justifyContent: 'center', display: 'flex' }}>\r\n                children born with the name \"{username}\" in the USA since 1880.\r\n            </div>\r\n\r\n            <div className=\"m-3\" style={{ justifyContent: 'center', display: 'flex' }}>\r\n                <Button onClick={Reset}>Search A New Name</Button>\r\n            </div>\r\n\r\n            <Log arrayOfSearches={searches} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ShowTotalCountByName","import React, { useEffect, useState } from \"react\";\r\nimport { Container, Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\n\r\nconst Navigator = () => {\r\n\r\n    return (\r\n        <>\r\n            <Navbar bg=\"dark\" variant=\"dark\">\r\n                <Container>\r\n                    <Navbar.Brand href=\"#home\">Docs</Navbar.Brand>\r\n                    <Nav className=\"me-auto\">\r\n                        <Nav.Link href=\"/BabyFrontEnd/#/\">Home</Nav.Link>\r\n                        <Nav.Link href=\"/BabyFrontEnd/#/Trends\">Trends</Nav.Link>\r\n                        <NavDropdown title=\"Search\" id=\"collasible-nav-dropdown\">\r\n                            <NavDropdown.Item href=\"/BabyFrontEnd/#/show_total_count_by_name\">By Name</NavDropdown.Item>\r\n                            <NavDropdown.Item href=\"/BabyFrontEnd/#/search_by_name_and_year\">By Name and Year</NavDropdown.Item>\r\n                            <NavDropdown.Item href=\"/BabyFrontEnd/#/search_by_name_and_state\">By State </NavDropdown.Item>\r\n                        </NavDropdown>\r\n                    </Nav>\r\n                </Container>\r\n            </Navbar>\r\n\r\n        </>\r\n    )\r\n\r\n\r\n\r\n}\r\n\r\nexport default Navigator","import React, { useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { get_total_count_by_name_and_year } from \"../api/api\"\r\nimport Log from \"./Log/log\";\r\nimport Loading from \"./Loading/loading\";\r\n\r\nconst ShowTotalCountByNameAndYear = () => {\r\n    const myurl = get_total_count_by_name_and_year;\r\n\r\n    const [data, setData] = useState([]);\r\n    const [SubmittedData, setSubmittedData] = useState(false);\r\n    const [username, setUsername] = useState('')\r\n    const [year, setYear] = useState(1880)\r\n    const dialogue1 = `Type in a name and year to search for.`\r\n    const dialogue2 = `The result returned will be the number of children born within a specific year with that name`\r\n\r\n    const [searches, setSearches] = useState([]);\r\n    const [doneLoading, setDoneLoading] = useState(false);\r\n\r\n    const loadData = async () => {\r\n\r\n        var bodyFormData = new FormData();\r\n        bodyFormData.append('username', username);\r\n        bodyFormData.append('useryear', year);\r\n\r\n        await fetch(myurl, {\r\n            method: \"POST\",\r\n            body: bodyFormData\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setData(data);\r\n                setSearches([...searches, [username, data[0][\"total\"]]])\r\n                setDoneLoading(true)\r\n            }\r\n            );\r\n    };\r\n\r\n    if (!SubmittedData) {\r\n        return (\r\n            <>\r\n                <div style={{ justifyContent: 'center', display: 'flex' }}>\r\n                    <p>{dialogue1}</p>\r\n                </div>\r\n                <div style={{ justifyContent: 'center', display: 'flex' }}>\r\n                    <p>{dialogue2}</p>\r\n                </div>\r\n\r\n                <div style={{ justifyContent: 'center', display: 'flex' }}>\r\n\r\n                    <div>\r\n                        <label> Name:</label>\r\n                        <input\r\n                            className=\"m-2\"\r\n                            type=\"text\"\r\n                            value={username}\r\n                            onChange={e => setUsername(e.target.value)}\r\n                        />\r\n                    </div>\r\n\r\n                </div >\r\n\r\n                <div style={{ justifyContent: 'center', display: 'flex' }}>\r\n\r\n                    <div>\r\n                        <label>Year:</label>\r\n                        <input\r\n\r\n                            className=\"m-2\"\r\n                            type=\"int\"\r\n                            max={2018}\r\n                            min={1880}\r\n                            value={year}\r\n                            onChange={e => setYear(e.target.value)}\r\n                        />\r\n                    </div>\r\n                </div >\r\n\r\n                <div style={{ justifyContent: 'center', display: 'flex' }}>\r\n                    <Button\r\n                        className=\"m-2\"\r\n                        onClick={() => {\r\n                            setSubmittedData(true);\r\n                            loadData();\r\n                        }}>\r\n                        Start counting!\r\n                    </Button>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    const Reset = () => {\r\n        setSubmittedData(!SubmittedData);\r\n        setDoneLoading(false);\r\n    }\r\n\r\n\r\n\r\n    if (!data.length || !doneLoading) {\r\n        return (\r\n            <div>\r\n                <Loading username={username} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"m-3 \" style={{ justifyContent: 'center', display: 'flex' }}>\r\n                There were a total of\r\n            </div>\r\n\r\n            <div className=\"m-3\" style={{ justifyContent: 'center', display: 'flex' }}>\r\n                <strong> {data[0][\"total\"].toLocaleString(\"en-US\")} </strong>\r\n            </div>\r\n\r\n            <div className=\"m-3\" style={{ justifyContent: 'center', display: 'flex' }}>\r\n                children born with the name \"{username}\" in the USA since 1880.\r\n            </div>\r\n\r\n            <div className=\"m-3\" style={{ justifyContent: 'center', display: 'flex' }}>\r\n                <Button onClick={Reset}>Search A New Name</Button>\r\n            </div>\r\n\r\n            <Log arrayOfSearches={searches} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ShowTotalCountByNameAndYear","// export const base_url = \"http://localhost:5000/\"\r\nexport const base_url = \"https://git.heroku.com/baby-name-mysql.git/\"\r\n\r\nexport const get_total_count_by_name = base_url + 'get_total_count_by_name'\r\n\r\nexport const get_total_count_by_name_and_year = base_url + 'get_total_count_by_name_and_year'\r\n\r\nconst get_karen_trend = base_url + 'get_karen_trend'\r\n\r\nconst get_name_trend_by_year = base_url + 'get_name_trend_by_year'\r\n\r\nconst get_name_trend_by_state = base_url + 'get_name_trend_by_state'\r\n\r\nexport default get_total_count_by_name\r\n\r\n","import React from \"react\";\nimport { HashRouter, Switch, Route, Link } from \"react-router-dom\";\nimport MyHeader from \"./components/Header/Header\";\nimport ShowTotalCountByName from \"./components/Show_total_count_by_name\";\nimport \"./App.css\";\nimport Navigator from \"./components/Navigator\";\nimport ShowTotalCountByNameAndYear from \"./components/Show_total_count_by_name_and_year\";\n\nconst App = () => {\n  return (\n    <HashRouter basename=\"/\">\n      <MyHeader />\n      <Navigator />\n\n      <Route path=\"/show_total_count_by_name\">\n        <ShowTotalCountByName />\n      </Route>\n\n      <Route path=\"/search_by_name_and_state\">\n        search by name and state\n      </Route>\n\n      <Route path=\"/search_by_name_and_year\">\n        <ShowTotalCountByNameAndYear />\n      </Route>\n\n      <Route path=\"/trends\">\n        trends\n      </Route>\n\n      <Route exact path=\"/\">\n        <div>home</div>\n      </Route>\n    </HashRouter>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}